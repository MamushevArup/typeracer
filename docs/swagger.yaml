definitions:
  handlers.errorResponse:
    properties:
      message:
        type: string
    type: object
  models.AuthResponse:
    properties:
      access:
        type: string
    type: object
  models.CountWpm:
    properties:
      duration:
        type: integer
      index:
        type: integer
    type: object
  models.LinkCreation:
    properties:
      content:
        type: string
      link:
        type: string
    type: object
  models.RacerInfo:
    properties:
      avatar:
        type: string
      username:
        type: string
    type: object
  models.RacerM:
    properties:
      avatar:
        type: string
      email:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  models.RefreshS:
    properties:
      fingerprint:
        type: string
    type: object
  models.ReqEndSingle:
    properties:
      duration:
        type: integer
      errors:
        type: integer
      length:
        type: integer
    type: object
  models.RespEndSingle:
    properties:
      accuracy:
        type: number
      duration:
        type: integer
      wpm:
        type: integer
    type: object
  models.SignIn:
    properties:
      email:
        type: string
      fingerprint:
        type: string
      password:
        type: string
    type: object
  models.SignUp:
    properties:
      email:
        type: string
      fingerprint:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.SingleResponse:
    properties:
      racer:
        $ref: '#/definitions/models.RacerInfo'
      text:
        $ref: '#/definitions/models.TextInfo'
    type: object
  models.Speed:
    properties:
      wpm:
        type: integer
    type: object
  models.TextInfo:
    properties:
      content:
        description: content is actual text
        type: string
      contributor_name:
        description: who contributed the content
        type: string
      header:
        description: header the title of the text. Ex name of the book, song
        type: string
      source:
        description: source from what it is coming. It can be from a book, article,
          etc.
        type: string
      text_author:
        description: who wrote the content
        type: string
    type: object
host: localhost:1001
info:
  contact: {}
  description: API for typeracer game clone. Typeracer popular game where users improve
    their typing skills in interactive format
  title: Typeracer Game clone API
  version: "1.0"
paths:
  /api/auth/logout:
    delete:
      consumes:
      - application/json
      description: This endpoint is used for user logout.
      operationId: log-out
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - Bearer: []
      summary: Log out
      tags:
      - auth
  /api/auth/refresh:
    post:
      consumes:
      - application/json
      description: This endpoint is used to refresh the endpoint token.
      operationId: refresh
      parameters:
      - description: Refresh
        in: body
        name: models.RefreshS
        required: true
        schema:
          $ref: '#/definitions/models.RefreshS'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - Bearer: []
      summary: Refresh token
      tags:
      - auth
  /api/auth/sign-in:
    post:
      consumes:
      - application/json
      description: This endpoint is used for user authentication.
      operationId: sign-in
      parameters:
      - description: Sign In
        in: body
        name: models.SignIn
        required: true
        schema:
          $ref: '#/definitions/models.SignIn'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Sign in
      tags:
      - auth
  /api/auth/sign-up:
    post:
      consumes:
      - application/json
      description: This endpoint is used for user registration.
      operationId: sign-up
      parameters:
      - description: Sign Up
        in: body
        name: models.SignUp
        required: true
        schema:
          $ref: '#/definitions/models.SignUp'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Sign up
      tags:
      - auth
  /single/curr-wpm:
    post:
      consumes:
      - application/json
      description: This endpoint is used to calculate the current WPM for a racer.
      operationId: curr-wpm
      parameters:
      - description: Wpm calculation
        in: body
        name: models.CountWpm
        required: true
        schema:
          $ref: '#/definitions/models.CountWpm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Speed'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - Bearer: []
      summary: Calculate current Words Per Minute (WPM)
      tags:
      - single
  /single/end-race:
    post:
      consumes:
      - application/json
      description: This endpoint is used to end a race for a racer.
      operationId: end-race
      parameters:
      - description: End Race
        in: body
        name: models.ReqEndSingle
        required: true
        schema:
          $ref: '#/definitions/models.ReqEndSingle'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.RespEndSingle'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - Bearer: []
      summary: End a race
      tags:
      - single
  /single/race:
    get:
      consumes:
      - application/json
      description: This endpoint is used to start a new race for a racer.
      operationId: start-race
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SingleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - Bearer: []
      summary: Start a new race
      tags:
      - single
  /track/link:
    post:
      consumes:
      - application/json
      description: This endpoint is used to create a racetrack. It generates a unique
        link for the racetrack and returns it to the user.
      operationId: create-racetrack
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.LinkCreation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a racetrack
      tags:
      - multiple
  /track/race/{link}:
    get:
      consumes:
      - application/json
      description: This endpoint is used to join a racetrack. It upgrades the HTTP
        connection to a WebSocket connection. The server sends messages with the current
        race status to the client over the WebSocket connection.
      operationId: racetrack
      parameters:
      - description: Race Link
        in: path
        name: link
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RacerM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Join a racetrack
      tags:
      - multiple
schemes:
- http
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
