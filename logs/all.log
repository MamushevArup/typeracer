time="2024-01-12T20:09:11+06:00" level=fatal msg="unable to ping database &{%!e(*pgconn.Config=&{localhost 5432 typeracer postgres Cicada_3301 0xc000051d40 120000000000 0x45c3e0 0x45c4a0 0x45b2c0 map[]   [0xc00005ec60] <nil> <nil> <nil> 0x49f020 true}) %!e(string=server error) %!e(*pgconn.PgError=&{\xc2\xc0\xc6\xcd\xce 3D000 \xe1\xe0\xe7\xe0 \xe4\xe0\xed\xed\xfb\xf5 \"typeracer\" \xed\xe5 \xf1\xf3\xf9\xe5\xf1\xf2\xe2\xf3\xe5\xf2   0 0        postinit.c 1021 InitPostgres})}\n" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:38"
time="2024-01-12T20:11:51+06:00" level=fatal msg="unable to ping database failed to connect to `host=localhost user=postgres database=typeracer`: server error (\xc2\xc0\xc6\xcd\xce: \xe1\xe0\xe7\xe0 \xe4\xe0\xed\xed\xfb\xf5 \"typeracer\" \xed\xe5 \xf1\xf3\xf9\xe5\xf1\xf2\xe2\xf3\xe5\xf2 (SQLSTATE 3D000))\n" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:38"
time="2024-01-12T20:30:55+06:00" level=fatal msg="unable to ping database failed to connect to `host=localhost user=postgres database=typeracer`: server error (\xc2\xc0\xc6\xcd\xce: \xe1\xe0\xe7\xe0 \xe4\xe0\xed\xed\xfb\xf5 \"typeracer\" \xed\xe5 \xf1\xf3\xf9\xe5\xf1\xf2\xe2\xf3\xe5\xf2 (SQLSTATE 3D000))\n" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:34"
time="2024-01-12T20:33:20+06:00" level=info msg="connect to the database successfully" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:37"
time="2024-01-12T20:35:31+06:00" level=fatal msg="unable to ping database failed to connect to `host=localhost user=postgres database=typeracer`: server error (\xc2\xc0\xc6\xcd\xce: \xe1\xe0\xe7\xe0 \xe4\xe0\xed\xed\xfb\xf5 \"typeracer\" \xed\xe5 \xf1\xf3\xf9\xe5\xf1\xf2\xe2\xf3\xe5\xf2 (SQLSTATE 3D000))\n" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:34"
time="2024-01-12T20:39:47+06:00" level=fatal msg="unable to ping database failed to connect to `host=localhost user=postgres database=template0`: server error (\xc2\xc0\xc6\xcd\xce: \xe1\xe0\xe7\xe0 \"template0\" \xed\xe5 \xef\xf0\xe8\xed\xe8\xec\xe0\xe5\xf2 \xef\xee\xe4\xea\xeb\xfe\xf7\xe5\xed\xe8\xff \xe2 \xe4\xe0\xed\xed\xfb\xe9 \xec\xee\xec\xe5\xed\xf2 (SQLSTATE 55000))\n" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:34"
time="2024-01-12T20:43:46+06:00" level=fatal msg="unable to ping database failed to connect to `host=localhost user=postgres database=s`: server error (\xc2\xc0\xc6\xcd\xce: \xe1\xe0\xe7\xe0 \xe4\xe0\xed\xed\xfb\xf5 \"s\" \xed\xe5 \xf1\xf3\xf9\xe5\xf1\xf2\xe2\xf3\xe5\xf2 (SQLSTATE 3D000))\n" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:34"
time="2024-01-12T22:55:29+06:00" level=info msg="connect to the database successfully" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:37"
time="2024-01-12T22:55:52+06:00" level=info msg="connect to the database successfully" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:37"
time="2024-01-12T23:06:35+06:00" level=fatal msg="unable to ping database failed to connect to `host=docker.internal.host user=postgres database=typeracer`: hostname resolving error (lookup docker.internal.host: no such host)\n" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:34"
time="2024-01-12T23:07:37+06:00" level=fatal msg="unable to ping database failed to connect to `host=typeracer user=postgres database=typeracer`: hostname resolving error (lookup typeracer: no such host)\n" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:34"
time="2024-01-12T23:12:37+06:00" level=fatal msg="unable to ping database failed to connect to `host=host.docker.internal user=postgres database=typeracer`: dial error (dial tcp 192.168.100.14:5432: connectex: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.)\n" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:34"
time="2024-01-12T23:19:03+06:00" level=fatal msg="unable to ping database failed to connect to `host=racer user=postgres database=typeracer`: hostname resolving error (lookup racer: no such host)\n" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:34"
time="2024-01-12T23:20:35+06:00" level=info msg="connect to the database successfully" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:37"
time="2024-01-12T23:26:00+06:00" level=info msg="connect to the database successfully" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:36"
time="2024-01-12T23:26:26+06:00" level=info msg="connect to the database successfully" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:36"
time="2024-01-12T23:26:47+06:00" level=info msg="connect to the database successfully" func="github.com/MamushevArup/typeracer/pkg/psql.(*psql).postgresUp()" file="postgres.go:36"
time="2024-01-18T05:01:51+06:00" level=error msg="can't start a transaction closed pool" func="github.com/MamushevArup/typeracer/internal/repository/postgres.(*repo).StartSingle()" file="postgres.go:46"
time="2024-01-18T05:08:57+06:00" level=error msg="can't scan to the go types number of field descriptions must equal number of values, got 1 and 0" func="github.com/MamushevArup/typeracer/internal/repository/postgres.(*repo).StartSingle()" file="postgres.go:58"
time="2024-01-18T21:26:14+06:00" level=error msg="can't scan to the go types can't scan into dest[0]: cannot scan uuid (OID 2950) in binary format into *[]uuid.UUID" func="github.com/MamushevArup/typeracer/internal/repository/postgres.(*repo).StartSingle()" file="postgres.go:65"
time="2024-01-18T21:42:43+06:00" level=error msg="can't scan racer data number of field descriptions must equal number of destinations, got 2 and 1" func="github.com/MamushevArup/typeracer/internal/repository/postgres.(*repo).StartSingle()" file="postgres.go:55"
time="2024-01-18T21:43:19+06:00" level=error msg="can't scan racer data number of field descriptions must equal number of destinations, got 2 and 1" func="github.com/MamushevArup/typeracer/internal/repository/postgres.(*repo).StartSingle()" file="postgres.go:55"
time="2024-01-18T21:47:24+06:00" level=error msg="can't scan racer data number of field descriptions must equal number of destinations, got 2 and 1" func="github.com/MamushevArup/typeracer/internal/repository/postgres.(*repo).StartSingle()" file="postgres.go:55"
time="2024-01-18T22:06:34+06:00" level=error msg="can't scan racer data scanning one: scanning: doing scan: starting: scany: to scan into a primitive type, columns number must be exactly 1, got: 2" func="github.com/MamushevArup/typeracer/internal/repository/postgres.(*repo).StartSingle()" file="postgres.go:56"
time="2024-01-18T22:14:27+06:00" level=error msg="can't scan text data scanning one: scanning: doing scan: scanFn: scany: column: 'content': no corresponding field found, or it's unexported in models.Single" func="github.com/MamushevArup/typeracer/internal/repository/postgres.(*repo).StartSingle()" file="postgres.go:64"
time="2024-01-22T22:05:04+06:00" level=error msg="unable to create a connection listen tcp :1000: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted." func="main.main()" file="app.go:77"
time="2024-01-22T22:05:49+06:00" level=error msg="unable to create a connection listen tcp :1000: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted." func="main.main()" file="app.go:77"
time="2024-01-22T22:39:34+06:00" level=error msg="can't scan racer data scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres.(*repo).StartSingle()" file="postgres.go:59"
time="2024-01-26T19:48:37+06:00" level=error msg="error with inserting into race_history ERROR: relation \"racehistory\" does not exist (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres.(*repo).EndSingleRace()" file="single-race.go:130"
time="2024-01-29T01:24:59+06:00" level=error msg="error with inserting into race_history ERROR: duplicate key value violates unique constraint \"race_history_pkey\" (SQLSTATE 23505)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:131"
time="2024-01-29T01:30:06+06:00" level=error msg="error with inserting into race_history ERROR: INSERT has more expressions than target columns (SQLSTATE 42601)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:131"
time="2024-01-29T01:31:57+06:00" level=error msg="error with inserting into single transaction failed ERROR: duplicate key value violates unique constraint \"single_pkey\" (SQLSTATE 23505)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:125"
time="2024-01-29T04:20:52+06:00" level=error msg="can't fetch length from text no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).GetTextLen()" file="single-race.go:151"
time="2024-01-29T23:39:53+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:125"
time="2024-01-29T23:52:01+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:125"
time="2024-01-29T23:54:53+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:126"
time="2024-01-29T23:56:52+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:126"
time="2024-01-30T00:23:24+06:00" level=error msg="can't scan racer data scanning one: scanning: doing scan: starting: scany: to scan into a primitive type, columns number must be exactly 1, got: 2" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).StartSingle()" file="single-race.go:70"
time="2024-01-30T00:24:29+06:00" level=error msg="can't scan text data scanning one: scanning: doing scan: starting: scany: to scan into a primitive type, columns number must be exactly 1, got: 3" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).StartSingle()" file="single-race.go:79"
time="2024-01-30T00:25:23+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:126"
time="2024-01-30T00:35:19+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:125"
time="2024-01-30T00:38:00+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:126"
time="2024-01-30T00:42:25+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:127"
time="2024-01-30T00:44:36+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:127"
time="2024-01-30T00:47:03+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:126"
time="2024-01-30T00:53:47+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:126"
time="2024-01-30T00:59:03+06:00" level=error msg="error with inserting into single transaction failed ERROR: insert or update on table \"single\" violates foreign key constraint \"single_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:126"
time="2024-01-30T04:43:58+06:00" level=error msg="unable to insert to moderation table due to ERROR: null value in column \"sent_at\" of relation \"moderation\" violates not-null constraint (SQLSTATE 23502)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/contributor.(*repo).Contribute()" file="contributor.go:33"
time="2024-01-30T04:44:50+06:00" level=error msg="unable to create a connection listen tcp: address 1000: missing port in address" func="main.main()" file="app.go:77"
time="2024-01-30T04:45:52+06:00" level=error msg="unable to insert to moderation table due to ERROR: insert or update on table \"moderation\" violates foreign key constraint \"moderation_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/contributor.(*repo).Contribute()" file="contributor.go:33"
time="2024-01-30T04:49:32+06:00" level=error msg="unable to insert to moderation table due to ERROR: insert or update on table \"moderation\" violates foreign key constraint \"moderation_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/contributor.(*repo).Contribute()" file="contributor.go:35"
time="2024-01-30T04:50:50+06:00" level=error msg="unable to insert to moderation table due to ERROR: insert or update on table \"moderation\" violates foreign key constraint \"moderation_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/contributor.(*repo).Contribute()" file="contributor.go:35"
time="2024-02-07T13:09:27+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPassword()" file="auth.go:28"
time="2024-02-07T17:33:30+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T17:36:36+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T17:39:32+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T17:40:59+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T17:42:21+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T17:43:35+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T17:44:51+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T17:45:52+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T17:46:51+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T17:47:35+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T19:48:11+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T21:38:46+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T21:42:15+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T21:44:35+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T21:45:15+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T21:46:08+06:00" level=info msg="Dive into USER BY EMAIL" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T21:47:16+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T22:15:31+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T22:16:10+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T22:17:56+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T22:22:58+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T22:26:51+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T22:27:23+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T22:34:58+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-07T22:44:25+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:27"
time="2024-02-08T01:47:36+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:46"
time="2024-02-08T01:47:36+06:00" level=error msg="error with insert ОШИБКА: значение NULL в столбце \"avatar\" отношения \"racer\" нарушает ограничение NOT NULL (SQLSTATE 23502)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).InsertUser()" file="auth.go:35"
time="2024-02-08T02:05:38+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:66"
time="2024-02-08T02:05:38+06:00" level=error msg="error with insert failed to encode args[1]: unable to encode time.Date(2024, time.February, 8, 2, 5, 38, 246951100, time.Local) into binary format for uuid (OID 2950): cannot find encode plan" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).InsertUser()" file="auth.go:51"
time="2024-02-08T02:07:58+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:66"
time="2024-02-08T02:10:50+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:66"
time="2024-02-08T02:12:49+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:66"
time="2024-02-08T02:13:17+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:66"
time="2024-02-08T15:32:10+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:66"
time="2024-02-08T15:52:11+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:66"
time="2024-02-08T15:52:11+06:00" level=error msg="can't get racer data ERROR: relation \"racer\" does not exist (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:71"
time="2024-02-08T16:52:20+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:66"
time="2024-02-08T16:52:20+06:00" level=error msg="can't get racer data ERROR: relation \"racer\" does not exist (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:71"
time="2024-02-08T16:58:51+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:66"
time="2024-02-08T16:58:51+06:00" level=error msg="can't get racer data ERROR: relation \"racer\" does not exist (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:71"
time="2024-02-08T21:49:34+06:00" level=error msg="unable to create a connection listen tcp :1000: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted." func="main.main()" file="app.go:84"
time="2024-02-08T21:53:23+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:54:55+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:55:23+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:55:23+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:96"
time="2024-02-08T21:55:33+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:56:13+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:56:13+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:96"
time="2024-02-08T21:56:25+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:56:25+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:96"
time="2024-02-08T21:58:05+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:58:05+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:96"
time="2024-02-08T21:58:34+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:58:34+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:96"
time="2024-02-08T21:59:20+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:59:26+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:59:26+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:96"
time="2024-02-08T21:59:33+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:59:33+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:96"
time="2024-02-08T21:59:57+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:81"
time="2024-02-08T21:59:57+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:96"
time="2024-02-08T23:12:11+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:82"
time="2024-02-08T23:12:11+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:97"
time="2024-02-08T23:12:18+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:82"
time="2024-02-08T23:12:18+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:97"
time="2024-02-08T23:14:12+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:82"
time="2024-02-08T23:14:12+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:97"
time="2024-02-08T23:23:01+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:88"
time="2024-02-08T23:23:01+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:103"
time="2024-02-08T23:23:45+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:88"
time="2024-02-08T23:23:45+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:103"
time="2024-02-08T23:23:54+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:88"
time="2024-02-08T23:23:54+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:103"
time="2024-02-08T23:25:38+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-08T23:25:38+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:92"
time="2024-02-08T23:25:54+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-08T23:25:54+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:92"
time="2024-02-08T23:26:43+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-08T23:26:43+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:92"
time="2024-02-08T23:26:47+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-08T23:26:47+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:92"
time="2024-02-08T23:27:25+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-08T23:27:30+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-08T23:27:30+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:92"
time="2024-02-08T23:27:53+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-08T23:27:53+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:92"
time="2024-02-08T23:29:45+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-08T23:29:45+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:92"
time="2024-02-08T23:29:55+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-08T23:29:55+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:92"
time="2024-02-08T23:30:02+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-08T23:30:02+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:92"
time="2024-02-09T12:32:33+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-09T12:32:33+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:92"
time="2024-02-09T12:38:28+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:77"
time="2024-02-09T12:38:28+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:92"
time="2024-02-12T03:05:54+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:79"
time="2024-02-12T03:05:54+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:94"
time="2024-02-12T03:06:40+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:79"
time="2024-02-12T03:06:40+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:94"
time="2024-02-12T03:07:00+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:79"
time="2024-02-12T03:07:00+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:94"
time="2024-02-12T03:07:09+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:79"
time="2024-02-12T03:07:09+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:94"
time="2024-02-12T03:07:15+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:79"
time="2024-02-12T03:07:15+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:94"
time="2024-02-12T03:08:02+06:00" level=info msg="error is scany: query multiple result rows: ОШИБКА: столбец \"refresh\" не существует (SQLSTATE 42703)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-12T03:08:29+06:00" level=info msg="error is scanning all: parsing slice destination: scany: destination must be a slice, got: models.RacerAuth" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-12T03:09:20+06:00" level=info msg="error is scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-12T03:10:41+06:00" level=info msg="error is scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-12T03:10:58+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:79"
time="2024-02-12T03:10:58+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:94"
time="2024-02-12T03:11:16+06:00" level=info msg="error is scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-12T03:11:41+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:79"
time="2024-02-12T03:11:41+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:94"
time="2024-02-12T03:12:38+06:00" level=info msg="error is scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-12T03:17:15+06:00" level=info msg="error is scanning one: scanning: doing scan: scanFn: scany: column: 'user_id': no corresponding field found, or it's unexported in models.RacerAuth" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-12T03:18:38+06:00" level=info msg="error is scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-12T03:18:48+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:79"
time="2024-02-12T03:18:48+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:94"
time="2024-02-12T03:19:26+06:00" level=info msg="error is scanning one: scanning: doing scan: scanFn: scany: column: 'user_id': no corresponding field found, or it's unexported in models.RacerAuth" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-12T03:20:13+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:79"
time="2024-02-12T03:20:13+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:94"
time="2024-02-12T03:20:32+06:00" level=info msg="error is <nil>" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-12T03:21:49+06:00" level=info msg="error is <nil>" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-14T13:46:22+06:00" level=info msg="error is <nil>" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:120"
time="2024-02-14T14:55:52+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-14T14:56:13+06:00" level=info msg="error is <nil>" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:132"
time="2024-02-14T14:57:31+06:00" level=info msg="error is scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:132"
time="2024-02-22T22:17:04+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-22T22:17:11+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-22T22:17:15+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-22T22:17:19+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-22T22:18:31+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-22T22:18:31+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-02-22T22:23:15+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-22T22:23:15+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-02-27T02:49:22+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-27T02:49:22+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-02-27T03:24:03+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-27T03:24:03+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-02-27T03:26:59+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-29T00:17:31+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-29T00:17:31+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-02-29T00:48:02+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-02-29T00:48:02+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-01T01:35:15+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-01T01:35:15+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-01T02:06:51+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-01T02:06:51+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-01T02:07:51+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-01T02:07:51+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-01T02:11:58+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-01T02:11:58+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-01T02:15:27+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-01T02:15:27+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-01T02:16:47+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-01T02:16:47+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-01T04:26:46+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-01T04:26:46+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-01T16:39:43+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-01T16:39:43+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-01T16:46:28+06:00" level=error msg="unable to update expiry due to ОШИБКА: оператор не существует: timestamp without time zone < interval (SQLSTATE 42883)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple.(*repo).CleanLink()" file="race.go:23"
time="2024-03-03T23:09:49+06:00" level=error msg="unable to create a connection listen tcp :1000: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted." func="main.main.func1()" file="app.go:90"
time="2024-03-03T23:10:48+06:00" level=error msg="unable to create a connection listen tcp :1000: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted." func="main.main()" file="app.go:89"
time="2024-03-03T23:11:17+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-03T23:14:30+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-03T23:14:30+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-03T23:20:48+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-03T23:20:48+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-03T23:25:23+06:00" level=error msg="unable to insert to moderation table due to ОШИБКА: INSERT или UPDATE в таблице \"moderation\" нарушает ограничение внешнего ключа \"moderation_racer_id_fkey\" (SQLSTATE 23503)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/contributor.(*repo).Contribute()" file="contributor.go:33"
time="2024-03-03T23:36:04+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-03T23:36:04+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-03T23:39:35+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-03T23:39:35+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-03T23:58:25+06:00" level=error msg="can't scan text data scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).StartSingle()" file="single-race.go:75"
time="2024-03-04T00:01:03+06:00" level=error msg="can't scan text data scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).StartSingle()" file="single-race.go:75"
time="2024-03-04T00:02:15+06:00" level=error msg="can't scan text data scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).StartSingle()" file="single-race.go:77"
time="2024-03-04T00:10:11+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-04T00:10:11+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-04T00:18:43+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-04T00:18:43+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-04T22:36:29+06:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-04T22:36:29+06:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-04T22:37:06+06:00" level=error msg="can't scan text data scany: query one result row: ОШИБКА: столбец \"content\" не существует (SQLSTATE 42703)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).StartSingle()" file="single-race.go:84"
time="2024-03-04T22:39:38+06:00" level=error msg="can't scan text data scany: query one result row: ОШИБКА: неоднозначная ссылка на столбец \"username\" (SQLSTATE 42702)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).StartSingle()" file="single-race.go:88"
time="2024-03-04T22:40:04+06:00" level=error msg="can't scan text data scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).StartSingle()" file="single-race.go:88"
time="2024-03-07T15:04:45+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-07T15:04:52+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-07T15:05:47+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-07T15:05:47+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-07T15:09:07+05:00" level=info msg="error is <nil>" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:132"
time="2024-03-07T15:10:55+05:00" level=info msg="error is scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:132"
time="2024-03-07T15:18:06+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-07T15:18:06+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-07T15:22:59+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-07T15:22:59+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-07T15:24:23+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-07T15:24:23+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-15T09:30:13+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-15T09:30:13+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-15T13:32:39+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-15T13:32:39+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-20T01:11:38+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-20T01:11:38+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-20T04:08:51+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-20T04:08:51+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-21T00:20:30+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-21T00:20:30+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-21T02:22:50+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-21T02:22:50+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-27T19:15:12+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-27T19:15:12+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-27T20:38:53+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-27T20:38:53+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-27T23:40:00+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-27T23:40:00+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-28T00:20:44+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-28T00:20:44+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-28T00:40:55+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-28T00:40:55+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-28T17:10:19+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-28T17:10:19+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-03-28T17:11:19+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:75"
time="2024-03-28T17:13:00+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:75"
time="2024-03-28T17:17:12+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:75"
time="2024-03-28T19:12:28+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:75"
time="2024-03-28T19:12:44+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-03-28T19:12:44+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-04T16:39:57+05:00" level=error msg="unable to update expiry due to ОШИБКА: отношение \"link_management\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/link.(*link).Remove()" file="link.go:35"
time="2024-04-04T16:40:07+05:00" level=error msg="unable to update expiry due to ОШИБКА: отношение \"link_management\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/link.(*link).Remove()" file="link.go:35"
time="2024-04-04T16:40:17+05:00" level=error msg="unable to update expiry due to ОШИБКА: отношение \"link_management\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/link.(*link).Remove()" file="link.go:35"
time="2024-04-04T16:40:27+05:00" level=error msg="unable to update expiry due to ОШИБКА: отношение \"link_management\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/link.(*link).Remove()" file="link.go:35"
time="2024-04-04T16:40:37+05:00" level=error msg="unable to update expiry due to ОШИБКА: отношение \"link_management\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/link.(*link).Remove()" file="link.go:35"
time="2024-04-04T16:40:47+05:00" level=error msg="unable to update expiry due to ОШИБКА: отношение \"link_management\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/link.(*link).Remove()" file="link.go:35"
time="2024-04-04T16:40:57+05:00" level=error msg="unable to update expiry due to ОШИБКА: отношение \"link_management\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/link.(*link).Remove()" file="link.go:35"
time="2024-04-04T16:41:06+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-04T16:41:06+05:00" level=error msg="can't get racer data ОШИБКА: отношение \"racer\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:96"
time="2024-04-04T16:41:07+05:00" level=error msg="unable to update expiry due to ОШИБКА: отношение \"link_management\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/link.(*link).Remove()" file="link.go:35"
time="2024-04-04T16:41:17+05:00" level=error msg="unable to update expiry due to ОШИБКА: отношение \"link_management\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/link.(*link).Remove()" file="link.go:35"
time="2024-04-04T16:41:27+05:00" level=error msg="unable to update expiry due to ОШИБКА: отношение \"link_management\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/link.(*link).Remove()" file="link.go:35"
time="2024-04-04T16:41:37+05:00" level=error msg="unable to update expiry due to ОШИБКА: отношение \"link_management\" не существует (SQLSTATE 42P01)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/link.(*link).Remove()" file="link.go:35"
time="2024-04-04T16:42:00+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-04T16:48:07+05:00" level=error msg="can't scan text data scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).StartSingle()" file="single-race.go:79"
time="2024-04-04T16:51:31+05:00" level=error msg="can't scan text data scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).StartSingle()" file="single-race.go:79"
time="2024-04-08T00:43:25+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-08T00:43:25+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-08T01:37:27+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:75"
time="2024-04-08T01:37:57+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:75"
time="2024-04-08T01:37:57+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:75"
time="2024-04-09T13:36:00+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-09T13:36:00+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-09T20:59:21+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-09T20:59:21+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-09T21:06:10+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-09T21:06:10+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-09T21:07:10+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:75"
time="2024-04-09T21:07:58+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:75"
time="2024-04-09T21:14:29+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:75"
time="2024-04-09T21:23:00+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-09T21:23:00+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-09T21:23:46+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:75"
time="2024-04-10T02:01:44+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-10T02:01:44+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-10T12:15:44+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-10T12:15:44+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-10T12:44:05+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:86"
time="2024-04-10T12:44:36+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:86"
time="2024-04-10T12:44:36+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:86"
time="2024-04-10T13:29:44+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-10T13:29:44+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-10T13:47:52+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:86"
time="2024-04-10T14:39:31+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:86"
time="2024-04-10T14:45:23+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:86"
time="2024-04-10T14:46:09+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:86"
time="2024-04-10T14:52:25+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-10T14:52:25+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-10T14:58:31+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:86"
time="2024-04-14T16:16:40+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-14T16:16:40+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-14T16:17:34+05:00" level=info msg="racer {   }" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:36"
time="2024-04-14T16:22:29+05:00" level=info msg="racer {   }" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:36"
time="2024-04-14T16:27:08+05:00" level=info msg="racer {   }" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:36"
time="2024-04-14T16:27:31+05:00" level=info msg="racer {a@gmail.com arup  }" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:36"
time="2024-04-14T16:27:31+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:86"
time="2024-04-14T16:34:02+05:00" level=info msg="racer {a@gmail.com arup  racer}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:36"
time="2024-04-14T18:32:22+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-14T18:32:22+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-14T20:06:43+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-14T20:06:43+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-14T21:13:18+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-14T21:13:18+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-14T21:32:31+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:86"
time="2024-04-14T21:32:31+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:86"
time="2024-04-16T00:08:54+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-16T00:08:54+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-16T00:25:38+05:00" level=error msg="error with inserting into single transaction failed ОШИБКА: повторяющееся значение ключа нарушает ограничение уникальности \"single_pkey\" (SQLSTATE 23505)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).EndSingleRace()" file="single-race.go:132"
time="2024-04-16T00:38:02+05:00" level=info msg="error is scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:132"
time="2024-04-16T00:39:36+05:00" level=info msg="error is scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:132"
time="2024-04-16T00:47:15+05:00" level=info msg="error is <nil>" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:132"
time="2024-04-16T01:03:11+05:00" level=info msg="racer {a@gmail.com arup  racer}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:41"
time="2024-04-16T01:05:40+05:00" level=error msg="unable to insert session due to failed to encode args[2]: unable to encode 120000000000 into binary format for int4 (OID 23): 120000000000 is greater than maximum value for int4" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).InsertSession()" file="race.go:124"
time="2024-04-16T01:10:05+05:00" level=info msg="racer {a@gmail.com arup  racer}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:42"
time="2024-04-16T01:11:00+05:00" level=info msg="racer {a@gmail.com arup  racer}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:42"
time="2024-04-16T01:11:03+05:00" level=error msg="unable to insert session due to failed to encode args[2]: unable to encode 120000000000 into binary format for int4 (OID 23): 120000000000 is greater than maximum value for int4" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).InsertSession()" file="race.go:127"
time="2024-04-16T01:14:59+05:00" level=info msg="racer {a@gmail.com arup  racer}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:42"
time="2024-04-16T01:15:30+05:00" level=info msg="racer {a@gmail.com arup  racer}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:42"
time="2024-04-16T01:15:36+05:00" level=error msg="unable to insert session due to failed to encode args[2]: unable to encode 120000000000 into binary format for int4 (OID 23): 120000000000 is greater than maximum value for int4" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).InsertSession()" file="race.go:127"
time="2024-04-16T01:22:35+05:00" level=info msg="error is <nil>" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:132"
time="2024-04-16T01:23:41+05:00" level=info msg="racer {a@gmail.com arup  racer}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:42"
time="2024-04-16T01:23:44+05:00" level=info msg="successfully inserted session" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).InsertSession()" file="race.go:151"
time="2024-04-16T01:23:44+05:00" level=error msg="unable to update text due to ОШИБКА: столбец \"occurence\" не существует (SQLSTATE 42703)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).UpdateRacerHistory()" file="race.go:185"
time="2024-04-16T01:26:07+05:00" level=info msg="racer {a@gmail.com arup  racer}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:42"
time="2024-04-16T01:26:46+05:00" level=info msg="racer {a@gmail.com arup  racer}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:42"
time="2024-04-16T01:27:11+05:00" level=error msg="unable to get racer id due to context deadline exceeded" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).RacerID()" file="race.go:107"
time="2024-04-16T01:27:11+05:00" level=error msg="unable to start transaction due to context deadline exceeded" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).InsertSession()" file="race.go:121"
time="2024-04-16T01:27:15+05:00" level=error msg="unable to insert multiple" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).AddRacers()" file="race.go:92"
time="2024-04-16T01:30:33+05:00" level=info msg="racer {a@gmail.com arup  racer}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:42"
time="2024-04-16T01:30:39+05:00" level=error msg="no racer with such email " func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).RacerID()" file="race.go:104"
time="2024-04-16T01:30:39+05:00" level=info msg="successfully inserted session" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).InsertSession()" file="race.go:151"
time="2024-04-16T01:30:39+05:00" level=error msg="unable to update text due to ОШИБКА: деление на ноль (SQLSTATE 22012)" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).UpdateRacerHistory()" file="race.go:185"
time="2024-04-16T01:31:53+05:00" level=info msg="racer {a@gmail.com arup  racer}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).User()" file="race.go:42"
time="2024-04-16T01:31:58+05:00" level=info msg="successfully inserted session" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).InsertSession()" file="race.go:151"
time="2024-04-16T01:31:58+05:00" level=info msg="successfully updated racer and text" func="github.com/MamushevArup/typeracer/internal/repository/postgres/multiple/race.(*multiple).UpdateRacerHistory()" file="race.go:199"
time="2024-04-16T15:00:01+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:00:01+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:00:08+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-16T15:00:08+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-16T15:00:19+05:00" level=error msg="can't scan text data scany: query one result row: failed to encode args[0]: unable to encode []interface {}{uuid.UUID{0xe1, 0xa2, 0x9, 0x3b, 0x29, 0xa5, 0x4b, 0x58, 0xa7, 0x24, 0x92, 0xd4, 0xf, 0x1a, 0x50, 0x1b}} into binary format for uuid (OID 2950): cannot find encode plan" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:88"
time="2024-04-16T15:07:36+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:07:36+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:07:39+05:00" level=error msg="can't scan text data scany: query one result row: failed to encode args[0]: unable to encode []interface {}{uuid.UUID{0x8c, 0xd3, 0xe5, 0xd1, 0x65, 0xfb, 0x49, 0x91, 0xb3, 0x1f, 0x6e, 0x51, 0xdc, 0x4c, 0x88, 0xa4}} into binary format for uuid (OID 2950): cannot find encode plan" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:88"
time="2024-04-16T15:11:05+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:11:05+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:11:09+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 Another sample text. Another Source Source Title 2 Jane Smith arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T15:26:09+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:26:09+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:26:18+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 This is a sample text. Some Source Source Title 1 John Doe arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T15:26:44+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:26:44+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:26:46+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 This is a sample text. Some Source Source Title 1 John Doe arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:94"
time="2024-04-16T15:29:01+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:29:01+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:29:05+05:00" level=error msg="can't scan text data scanning one: scanning: parsing destination: scany: destination must be a pointer, got: models.TextInfo" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:87"
time="2024-04-16T15:29:56+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:29:56+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:30:01+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 Yet another sample text. Yet Another Source Source Title 3 Alice Johnson arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:94"
time="2024-04-16T15:32:49+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:32:49+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:32:56+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-16T15:32:56+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-16T15:33:05+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 Another sample text. Another Source Source Title 2 Jane Smith arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T15:33:40+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:33:40+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:33:44+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 This is a sample text. Some Source Source Title 1 John Doe arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T15:33:54+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 Another sample text. Another Source Source Title 2 Jane Smith arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T15:34:42+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:34:42+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:34:44+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 This is a sample text. Some Source Source Title 1 John Doe arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T15:38:59+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:38:59+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:39:02+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 This is a sample text. Some Source Source Title 1 John Doe arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T15:39:21+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:39:21+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:39:24+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 Another sample text. Another Source Source Title 2 Jane Smith arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T15:39:45+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T15:39:45+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T15:39:48+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 This is a sample text. Some Source Source Title 1 John Doe arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T16:00:41+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T16:00:41+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T16:08:35+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-16T16:21:47+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T16:21:47+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T16:21:52+05:00" level=error msg="can't fetch length from text no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).GetTextLen()" file="single-race.go:168"
time="2024-04-16T16:54:19+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T16:54:19+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T16:59:13+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 This is a sample text. Some Source Source Title 1 John Doe arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T16:59:20+05:00" level=error msg="can't fetch length from text failed to encode args[0]: unable to encode []interface {}{uuid.UUID{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}} into binary format for uuid (OID 2950): cannot find encode plan" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).GetTextLen()" file="single-race.go:176"
time="2024-04-16T17:00:03+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T17:00:03+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T17:00:09+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 This is a sample text. Some Source Source Title 1 John Doe arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T17:00:14+05:00" level=error msg="can't fetch length from text no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).GetTextLen()" file="single-race.go:176"
time="2024-04-16T17:01:01+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T17:01:01+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T17:01:06+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 Another sample text. Another Source Source Title 2 Jane Smith arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T17:01:35+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T17:01:35+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T17:01:38+05:00" level=info msg="text info {00000000-0000-0000-0000-000000000000 This is a sample text. Some Source Source Title 1 John Doe arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:92"
time="2024-04-16T17:02:34+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:47"
time="2024-04-16T17:02:34+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:55"
time="2024-04-16T17:02:38+05:00" level=info msg="text info {e1a2093b-29a5-4b58-a724-92d40f1a501b Another sample text. Another Source Source Title 2 Jane Smith arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="single-race.go:93"
time="2024-04-16T21:48:16+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:58"
time="2024-04-16T21:48:16+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:66"
time="2024-04-16T21:50:55+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:58"
time="2024-04-16T21:50:55+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:66"
time="2024-04-16T22:32:49+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:58"
time="2024-04-16T22:32:49+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:66"
time="2024-04-16T22:35:24+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-16T22:35:24+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-16T22:37:09+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:58"
time="2024-04-16T22:37:09+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:66"
time="2024-04-16T22:38:11+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:58"
time="2024-04-16T22:38:11+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:66"
time="2024-04-16T22:39:21+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-16T22:39:21+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-16T22:39:39+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-16T22:39:39+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-16T22:39:50+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-16T22:39:50+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-16T22:43:29+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-16T22:43:29+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-16T22:44:10+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-16T22:44:10+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-16T22:58:46+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-16T22:58:46+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-16T22:59:58+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-16T22:59:58+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-16T23:00:39+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-16T23:00:39+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-16T23:02:13+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-16T23:02:13+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-16T23:02:19+05:00" level=info msg="text info {8cd3e5d1-65fb-4991-b31f-6e51dc4c88a4 Yet another sample text. Yet Another Source Source Title 3 Alice Johnson arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="select.go:62"
time="2024-04-16T23:02:46+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-16T23:02:46+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-16T23:03:10+05:00" level=info msg="text info {b5c86539-2edf-4d1f-9e8a-ec71b70f4a7a This is a sample text. Some Source Source Title 1 John Doe arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="select.go:62"
time="2024-04-16T23:03:14+05:00" level=info msg="text info {8cd3e5d1-65fb-4991-b31f-6e51dc4c88a4 Yet another sample text. Yet Another Source Source Title 3 Alice Johnson arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="select.go:62"
time="2024-04-16T23:11:11+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-16T23:11:11+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-16T23:11:33+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-16T23:11:33+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-16T23:12:01+05:00" level=info msg="text info {e1a2093b-29a5-4b58-a724-92d40f1a501b Another sample text. Another Source Source Title 2 Jane Smith arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="select.go:62"
time="2024-04-17T00:37:17+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T00:37:17+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T00:37:47+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T00:37:47+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T00:38:41+05:00" level=info msg="text info {b5c86539-2edf-4d1f-9e8a-ec71b70f4a7a This is a sample text. Some Source Source Title 1 John Doe arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="select.go:62"
time="2024-04-17T00:42:46+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T00:42:46+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T00:43:13+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T00:43:13+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T00:43:40+05:00" level=info msg="text info {e1a2093b-29a5-4b58-a724-92d40f1a501b Another sample text. Another Source Source Title 2 Jane Smith arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="select.go:62"
time="2024-04-17T00:43:58+05:00" level=info msg="error is <nil>" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:132"
time="2024-04-17T00:44:44+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T00:44:44+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T00:44:55+05:00" level=info msg="text info {e1a2093b-29a5-4b58-a724-92d40f1a501b Another sample text. Another Source Source Title 2 Jane Smith arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="select.go:62"
time="2024-04-17T00:45:09+05:00" level=info msg="error is scanning one: no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).Fingerprint()" file="auth.go:132"
time="2024-04-17T00:48:43+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T00:48:43+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T00:49:07+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T00:49:07+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T00:49:24+05:00" level=error msg="can't execute use exist check expected 2 arguments, got 1" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).RacerExist()" file="helpers.go:90"
time="2024-04-17T00:50:20+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T00:50:20+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T00:50:25+05:00" level=error msg="can't execute use exist check expected 2 arguments, got 1" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).RacerExist()" file="helpers.go:90"
time="2024-04-17T00:50:28+05:00" level=error msg="can't execute use exist check expected 2 arguments, got 1" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).RacerExist()" file="helpers.go:90"
time="2024-04-17T00:50:46+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T00:50:46+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T00:53:32+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T00:53:32+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T00:53:34+05:00" level=error msg="can't execute use exist check expected 2 arguments, got 1" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).RacerExist()" file="helpers.go:91"
time="2024-04-17T00:59:43+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T00:59:43+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T00:59:49+05:00" level=info msg="text info {e1a2093b-29a5-4b58-a724-92d40f1a501b Another sample text. Another Source Source Title 2 Jane Smith arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="select.go:62"
time="2024-04-17T01:00:26+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T01:00:26+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T01:03:34+05:00" level=info msg="text info {8cd3e5d1-65fb-4991-b31f-6e51dc4c88a4 Yet another sample text. Yet Another Source Source Title 3 Alice Johnson arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="select.go:62"
time="2024-04-17T01:04:14+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T01:04:14+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T01:04:21+05:00" level=error msg="can't fetch length from text no rows in result set" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).GetTextLen()" file="helpers.go:66"
time="2024-04-17T01:04:27+05:00" level=info msg="text info {e1a2093b-29a5-4b58-a724-92d40f1a501b Another sample text. Another Source Source Title 2 Jane Smith arup}" func="github.com/MamushevArup/typeracer/internal/repository/postgres/single.(*repo).TextInfo()" file="select.go:62"
time="2024-04-17T01:04:32+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T01:04:32+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T01:06:49+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T01:06:49+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T01:07:23+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T01:07:23+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T01:07:59+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T01:07:59+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T01:08:05+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T01:08:05+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T01:09:07+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T01:09:07+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T01:09:09+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T01:09:09+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T01:10:06+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T01:10:06+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T01:10:10+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T01:10:10+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T01:11:36+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T01:11:36+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T01:11:40+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T01:11:40+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T01:15:19+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T01:15:19+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T01:15:24+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T01:15:24+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T01:20:19+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T01:20:19+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T01:20:22+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T01:20:22+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T01:33:35+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T01:33:35+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T01:33:38+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T01:33:38+05:00" level=info msg="Dive into GetUser method" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).GetUserPasswordByEmail()" file="auth.go:106"
time="2024-04-17T02:50:05+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T02:50:05+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T02:52:13+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T02:52:13+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T02:55:57+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T02:55:57+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T02:58:12+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T02:58:12+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T02:58:36+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T02:59:11+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T03:01:49+05:00" level=info msg="DB connection established" func="main.main()" file="app.go:57"
time="2024-04-17T03:01:49+05:00" level=info msg="Server started at port 1001" func="main.main()" file="app.go:65"
time="2024-04-17T03:02:04+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T03:02:11+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T03:02:16+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
time="2024-04-17T03:02:30+05:00" level=info msg="in user by email method repo layer" func="github.com/MamushevArup/typeracer/internal/repository/postgres/authr.(*auth).UserByEmail()" file="auth.go:91"
